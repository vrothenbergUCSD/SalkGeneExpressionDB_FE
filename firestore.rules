// rules_version = '2';
// service cloud.firestore {
//   match /databases/{database}/documents {
//     match /{document=**} {
//       allow read, write: if false;
//     }
//   }
// }

service cloud.firestore {
  match /databases/{database}/documents {
  	function userInAdminGroups() {
    	return resource.data.admin_groups.hasAny(get(/databases/$(database)/documents/users/$(request.auth.uid)).data.admin_groups);
    }
    
    function userInEditorGroups() {
    	return resource.data.editor_groups.hasAny(get(/databases/$(database)/documents/users/$(request.auth.uid)).data.editor_groups);
    }
    
    function userInReaderGroups() {
    	return resource.data.reader_groups.hasAny(get(/databases/$(database)/documents/users/$(request.auth.uid)).data.reader_groups);
    }
    
  
  	match /users/{user_id} {
    	allow read: if true;
    	allow create: if request.auth.uid == request.resource.id;
      allow update, delete: if request.auth.uid == resource.id;
    }
    
    match /permission_groups/{group_id} {
    	allow read: if true;
    	allow create: if request.resource.data.owner == request.auth.uid 
      	|| request.auth.uid in request.resource.data.admin_users;
      allow update, delete: if resource.data.owner == request.auth.uid
        || request.auth.uid in resource.data.admin_users 
        || userInAdminGroups();
    }
    
    match /datasets/{dataset_id} {
    	allow read: if request.auth.uid == resource.data.owner
      	|| resource.data.name == 'Public'
        || userInReaderGroups() 
      	|| userInEditorGroups()
        || userInAdminGroups();
      allow create: if request.auth.uid == request.resource.data.owner;
      allow update, delete: if request.auth.uid == resource.data.owner
        || userInEditorGroups()
        || userInAdminGroups();
    
    }
  
  }
}